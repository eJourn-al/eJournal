name: eJournal CI
on: push

env:
  BASELINK: 'http://localhost:8080'
  DJANGO_SECRET_KEY: '@a4c3cpgfe0@8s!be=23d5+3e30vyj7!q%tolqpewafp^-@=br'
  DATABASE_NAME: postgres
  DATABASE_USER: postgres
  DATABASE_PASSWORD: password
  DATABASE_HOST: localhost
  DATABASE_PORT: 5432
  BROKER_URL: 'amqp://postgres:password@localhost/postgres'
  DEFAULT_LMS_PROFILE_PICTURE: 'images/messages/avatar-50.png'
  LTI_SECRET: 4339900ae5861f3086861ea492772864
  LTI_KEY: 0cd500938a8e7414ccd31899710c98ce
  DJANGO_SETTINGS_MODULE: 'VLE.settings.ci_cd'
  SENTRY_DSN: ''
  SENTRY_SENTRY_ORG: ejournal
  SENTRY_PROJECT: ejournal
  MAILGUN_API_KEY: placeholder
  MAILGUN_SENDER_DOMAIN: placeholder
  API_URL: 'http://localhost:8000'
  RELEASE_VERSION: '1.0.0'
  CODE_VERSION: 937aa7be86b36e1d30444336c073bbf6a4e72b2f
  CI_CD: true

jobs:
  backend-tests:
    name: Run Django Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    services:
      postgres:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          submodules: recursive

      - name: Set up Python 3.6.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.9

      - name: Cache python environment
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: python-${{ hashFiles('requirements/base.txt') }}-${{ hashFiles('requirements/ci.txt') }}

      - name: Install dependencies
        run: pip3 install -r requirements/ci.txt

      - name: Run tests
        run: pytest src/django/test --cov=VLE -x -n auto --splits 10 --group ${{ matrix.group }}

      - name: Upload coverage
        uses: actions/upload-artifact@v1
        with:
          name: coverage${{ matrix.group }}
          path: .coverage



  coverage:
    needs: backend-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          submodules: recursive

      - name: Set up Python 3.6.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.9

      - name: Cache python environment
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: python-${{ hashFiles('requirements/base.txt') }}-${{ hashFiles('requirements/ci.txt') }}

      - name: Install dependencies
        run: pip3 install -r requirements/ci.txt

      # v2 will support downloading multiple with single step: https://github.com/actions/download-artifact/issues/23#issue-580701561
      - name: Download coverage1
        uses: actions/download-artifact@v1
        with:
          name: coverage1
      - name: Download coverage2
        uses: actions/download-artifact@v1
        with:
          name: coverage2
      - name: Download coverage3
        uses: actions/download-artifact@v1
        with:
          name: coverage3
      - name: Download coverage4
        uses: actions/download-artifact@v1
        with:
          name: coverage4
      - name: Download coverage5
        uses: actions/download-artifact@v1
        with:
          name: coverage5
      - name: Download coverage6
        uses: actions/download-artifact@v1
        with:
          name: coverage6
      - name: Download coverage7
        uses: actions/download-artifact@v1
        with:
          name: coverage7
      - name: Download coverage8
        uses: actions/download-artifact@v1
        with:
          name: coverage8
      - name: Download coverage9
        uses: actions/download-artifact@v1
        with:
          name: coverage9
      - name: Download coverage10
        uses: actions/download-artifact@v1
        with:
          name: coverage10
      - name: Run coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage report
          coverage xml
      - uses: codecov/codecov-action@v1.0.6

  linters:
    name: Run Linters
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          submodules: recursive

      - name: Set up Python 3.6.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.9

      - name: Cache python environment
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: python-${{ hashFiles('requirements/base.txt') }}-${{ hashFiles('requirements/ci.txt') }}

      - name: Install dependencies
        run: pip3 install -r requirements/ci.txt

      - uses: bahmutov/npm-install@v1.4.5
        with:
          working-directory: src/vue
          useLockFile: false

      - name: Run linters
        run: flake8 ./src/django && ./src/django/manage.py check --fail-level=WARNING && npm run lint --prefix ./src/vue

